package myaspectj;

import java.util.*;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.PrintStream;
import android.util.Log;
import android.app.Activity;
import android.content.Context;
import android.util.Xml;
import android.widget.Toast;
import org.aspectj.lang.JoinPoint;
import org.aspectj.lang.ProceedingJoinPoint;
import org.aspectj.lang.annotation.After;
import org.aspectj.lang.annotation.Around;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.Pointcut;
import java.io.RandomAccessFile;

public aspect myAspectJ {
    private String TAG = "zhongchaoyang";
    private String filePath = "/sdcard/zhongcaoyuo/";
    private String fileName = "log_011.txt";
    
	pointcut hzw_execu() : execution(* com.angrydoughnuts..*.*(..))&& !within(myAspectJ);
	pointcut tracflow() : cflow(hzw_execu()) && !within(myAspectJ);
	
	//before() : hzw_execu( ){  
    //    Log.e("Execu------", thisJoinPoint.getSignature().getName());
    //    writeTxtToFile("Execu------"+thisJoinPoint.toString()+"------"+thisJoinPoint.getStaticPart().getSourceLocation().getLine(), filePath, fileName);
	//}  
	before() : tracflow(){
		Log.e("Cflow------", thisJoinPoint.toString()+"------"+thisJoinPoint.getStaticPart().getSourceLocation().getLine());
	    writeTxtToFile("Cflow------"+thisJoinPoint.toString()+"------"+thisJoinPoint.getStaticPart().getSourceLocation().getLine(), filePath, fileName);
	}
	
	/*
	//閿熸枻鎷风墖閿熸枻鎷烽敓鏂ゆ嫹2
    //@Pointcut("execution(* android.com.abb..*.*(..))")//
    //public void testAspectExecu() {
    //}
    @Pointcut("execution(* android.com.abb..*.*(..))")//閿熷彨甯嫹閿熼摪鍑ゆ嫹閿熸枻鎷烽敓渚ョ鎷烽敓鏂ゆ嫹
    public void testAspect() {
    }
    @Pointcut("cflow(testAspect())&& !within(myAspectJ)")
    public void TestAspectCflow(){
    }
    
    @Before("testAspect()")
    public void testTestAspect(JoinPoint joinPoint) {
        //Toast.makeText((Context) joinPoint.getTarget(),"OK",Toast.LENGTH_SHORT).show();
        //Log.e("-----","------------------------------------------before execution");
        Log.e("Execu------", joinPoint.getSignature().getName());
       // Log.e("11111111", joinPoint.getSignature().getName());
       // writeTxtToFile("Execu------"+joinPoint.toString()+"------"+joinPoint.getStaticPart().getSourceLocation().getLine(), filePath, fileName);
    }
 
    @Before("TestAspectCflow()")
    public void testTestAspectCflow(JoinPoint joinPoint2){
        Log.e("Cflow------", joinPoint2.toString()+"------"+joinPoint2.getStaticPart().getSourceLocation().getLine());
       // writeTxtToFile("Cflow------"+joinPoint2.toString()+"------"+joinPoint2.getStaticPart().getSourceLocation().getLine(), filePath, fileName);
    }
    */
    //閿熸枻鎷风墖閿熸枻鎷烽敓鏂ゆ嫹2-----
    
    
    // 閿熸枻鎷烽敓琛楀嚖鎷烽敓鏂ゆ嫹鍐欓敓璇埌閿熶茎鎲嬫嫹閿熶茎纭锋嫹閿熸枻鎷�
    public void writeTxtToFile(String strcontent, String filePath, String fileName) {
        //閿熸枻鎷烽敓鏂ゆ嫹閿熶茎纭锋嫹閿熸枻鎷蜂箣閿熸枻鎷烽敓鏂ゆ嫹閿熸枻鎷烽敓鏂ゆ嫹閿熶茎纭锋嫹閿熸枻鎷烽敓鏂ゆ嫹鐒堕敓鏂ゆ嫹閿熸枻鎷烽敓锟�
        makeFilePath(filePath, fileName);

        String strFilePath = filePath+fileName;
        // 姣忛敓鏂ゆ嫹鍐欓敓鏂ゆ嫹鏃堕敓鏂ゆ嫹閿熸枻鎷烽敓鏂ゆ嫹閿熸枻鎷峰啓
        String strContent = strcontent + "\r\n";
        try {
            File file = new File(strFilePath);
            if (!file.exists()) {
                Log.d("TestFile", "Create the file:" + strFilePath);
                file.getParentFile().mkdirs();
                file.createNewFile();
            }
            RandomAccessFile raf = new RandomAccessFile(file, "rwd");
            raf.seek(file.length());
            raf.write(strContent.getBytes());
            raf.close();
        } catch (Exception e) {
            Log.e("TestFile", "Error on write File:" + e);
        }
    }

    // 閿熸枻鎷烽敓鏂ゆ嫹閿熶茎纭锋嫹
    public File makeFilePath(String filePath, String fileName) {
        File file = null;
        makeRootDirectory(filePath);
        try {
            file = new File(filePath + fileName);
            if (!file.exists()) {
                file.createNewFile();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return file;
    }

    // 閿熸枻鎷烽敓鏂ゆ嫹閿熶茎纭锋嫹閿熸枻鎷�
    public static void makeRootDirectory(String filePath) {
        File file = null;
        try {
            file = new File(filePath);
            if (!file.exists()) {
                file.mkdir();
            }
        } catch (Exception e) {
            Log.i("error:", e + "");
        }
    }
}
